package com.dbs.demo.controller;

import com.dbs.demo.repository.ParameterRepository;
import com.dbs.demo.model.Parameter;
import com.dbs.demo.repository.LocationRepository;
import com.dbs.demo.model.Location;
import com.dbs.demo.repository.MeasureRepository;
import com.dbs.demo.model.Measure;
import com.dbs.demo.repository.ObservationRepository;
import com.dbs.demo.model.Observation;
import com.dbs.demo.model.Metric;
import com.dbs.demo.repository.MetricRepository;
import com.dbs.demo.service.MeasureService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.List;


@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private ParameterRepository parameterRepository;
    @Autowired
    private LocationRepository locationRepository;

    @Autowired
    private MeasureRepository measureRepository;

    @Autowired
    private ObservationRepository observationRepository;

    @Autowired
    private MetricRepository metricRepository;

    @Autowired
    private MeasureService measureService;

    @GetMapping(path="/parameter")
    public @ResponseBody Iterable<Parameter> getParameter() {
        // This returns a JSON or XML with the users

        return parameterRepository.show();
    }

    @GetMapping(path="/location")
    public @ResponseBody Iterable<Location> getLocation() {
        // This returns a JSON or XML with the users

        return locationRepository.show();
    }

    @GetMapping(path="/measure")
    public @ResponseBody Iterable<Measure> getMeasure() {
        // This returns a JSON or XML with the users

        return measureRepository.show();
    }

    @GetMapping(path="/observation")
    public @ResponseBody Iterable<Observation> getObservation() {
        // This returns a JSON or XML with the users

        return observationRepository.show();
    }

    @GetMapping(path="/metric")
    public @ResponseBody Iterable<Metric> getMetric() {
        // This returns a JSON or XML with the users

        return metricRepository.show();
    }

    @GetMapping(path="/stored")
    public @ResponseBody List<String> getAvg(@RequestParam("p") String p) {
        // This returns a JSON or XML with the users

        return measureService.getParameterAvg(p);
    }

    @GetMapping(path="/view")
    public @ResponseBody List<String> getCity() {
        // This returns a JSON or XML with the users

        return measureRepository.showCity();
    }
}
